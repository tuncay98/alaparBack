{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tunca\\\\Desktop\\\\AlApar_master\\\\next\\\\alapar\\\\components\\\\subcomponents\\\\filter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\nconst {\n  Option\n} = Select;\nlet holder = [{\n  id: 5,\n  name: \"Baki\"\n}, {\n  id: 4,\n  name: \"Kelbecer\"\n}];\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"price\\u0130nputGenerator\", (title, minName, maxName, min, step) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'priceInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Min.\",\n            min: min,\n            step: step,\n            name: minName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), \"-\", /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Max.\",\n            min: min,\n            step: step,\n            name: maxName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this);\n    });\n\n    _defineProperty(this, \"citySearch\", value => {\n      console.log(value);\n      this.setState({\n        regionList: this.props.filterJson.cities.filter(w => w.id == value).regions\n      });\n    });\n\n    _defineProperty(this, \"selectGenerator\", (title, options, name) => {\n      if (!options) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'selectInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onSelect: this.citySearch,\n            name: name,\n            defaultValue: \"lucy\",\n            style: {\n              width: 120\n            },\n            children: options.map(w => /*#__PURE__*/_jsxDEV(Option, {\n              value: w.id,\n              children: w.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 35\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"checkBoxGenerator\", title => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'checkInput',\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this);\n    });\n\n    _defineProperty(this, \"sliderGenerator\", (title, min, max) => {\n      let marks = {\n        [min]: {\n          style: {\n            width: '100%',\n            left: '8%'\n          },\n          label: `${min / 1000}.000 M`\n        },\n        [max]: {\n          style: {\n            width: '100%',\n            left: '92%'\n          },\n          label: `${max / 1000}.000 M`\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            step: 5000,\n            min: min,\n            max: max,\n            defaultValue: [min, max],\n            tipFormatter: value => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [value / 1000, \".000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 46\n            }, this),\n            marks: marks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    });\n\n    this.filterList = [];\n    this.state = {\n      categoryList: null,\n      cityList: null,\n      regionList: null,\n      villageList: null\n    };\n\n    if (props.filterJson.categories) {\n      this.state.categoryList = props.filterJson.categories;\n    }\n\n    if (props.filterJson.cities) {\n      this.state.cityList = props.filterJson.cities;\n    }\n\n    this.categoryInput = this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\");\n    this.cityInput = this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\");\n    this.regionInput = this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\");\n    console.log(props.filterJson);\n    this.index = 0;\n    this.filterList.push({\n      key: this.index++,\n      input: this.categoryInput\n    });\n    this.filterList.push({\n      key: this.index++,\n      input: this.cityInput\n    });\n    this.filterList.push({\n      key: this.index++,\n      input: this.regionInput\n    });\n    /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n    this.filterList.push({key: this.index++, input: this.cityInput})\r\n                {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                {checkBoxGenerator(\"Çıxarış\")}\r\n                {checkBoxGenerator(\"Ipoteka\")}*/\n  }\n\n  render(h) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'filter',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'containerFilter',\n        children: this.filterList.map(w => w.input)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["C:/Users/tunca/Desktop/AlApar_master/next/alapar/components/subcomponents/filter.js"],"names":["Component","Select","Slider","Checkbox","InputNumber","Option","holder","id","name","Filter","constructor","props","title","minName","maxName","min","step","value","replace","console","log","setState","regionList","filterJson","cities","filter","w","regions","options","citySearch","width","map","max","marks","style","left","label","filterList","state","categoryList","cityList","villageList","categories","categoryInput","selectGenerator","cityInput","regionInput","index","push","key","input","render","h"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,WAAnC,QAAsD,MAAtD;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaJ,MAAnB;AAIA,IAAIK,MAAM,GAAG,CACT;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADS,EAKT;AACID,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALS,CAAb;;AAWA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,sDA4CA,CAACC,KAAD,EAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,GAA1B,EAA+BC,IAA/B,KAAwC;AAC1D,0BACI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,iCAAwB;AAAA,sBAAQJ;AAAR;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,kCACI,QAAC,WAAD;AACI,YAAA,WAAW,EAAE,MADjB;AAEI,YAAA,GAAG,EAAEG,GAFT;AAGI,YAAA,IAAI,EAAEC,IAHV;AAII,YAAA,IAAI,EAAEH,OAJV;AAKI,YAAA,SAAS,EAAEI,KAAK,IAAK,GAAEA,KAAM,EAAT,CAAWC,OAAX,CAAmB,uBAAnB,EAA4C,GAA5C,CALxB;AAMI,YAAA,MAAM,EAAED,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAc,aAAd,EAA6B,EAA7B;AANrB;AAAA;AAAA;AAAA;AAAA,kBADJ,oBAUI,QAAC,WAAD;AACI,YAAA,WAAW,EAAE,MADjB;AAEI,YAAA,GAAG,EAAEH,GAFT;AAGI,YAAA,IAAI,EAAEC,IAHV;AAII,YAAA,IAAI,EAAEF,OAJV;AAKI,YAAA,SAAS,EAAEG,KAAK,IAAK,GAAEA,KAAM,EAAT,CAAWC,OAAX,CAAmB,uBAAnB,EAA4C,GAA5C,CALxB;AAMI,YAAA,MAAM,EAAED,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAc,aAAd,EAA6B,EAA7B;AANrB;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH,KAtEqB;;AAAA,wCAwERD,KAAD,IAAU;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,WAAKI,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWY,UAAX,CAAsBC,MAAtB,CAA6BC,MAA7B,CAAoCC,CAAC,IAAEA,CAAC,CAACnB,EAAF,IAAQU,KAA/C,EAAsDU;AAAnE,OAAd;AACH,KA5EqB;;AAAA,6CA8EJ,CAACf,KAAD,EAAQgB,OAAR,EAAiBpB,IAAjB,KAA0B;AACxC,UAAG,CAACoB,OAAJ,EAAa,OAAO,IAAP;AAEb,0BAAQ;AAAK,QAAA,SAAS,EAAE,aAAhB;AAAA,gCACJ;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,iCAAwB;AAAA,sBAAQhB;AAAR;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,QAAQ,EAAE,KAAKiB,UAAvB;AAAmC,YAAA,IAAI,EAAErB,IAAzC;AAA+C,YAAA,YAAY,EAAC,MAA5D;AAAmE,YAAA,KAAK,EAAE;AAAEsB,cAAAA,KAAK,EAAE;AAAT,aAA1E;AAAA,sBACKF,OAAO,CAACG,GAAR,CAAYL,CAAC,iBAAI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAEA,CAAC,CAACnB,EAAjB;AAAA,wBAAsBmB,CAAC,CAAClB;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAAjB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAQH,KAzFqB;;AAAA,+CA2FDI,KAAD,IAAW;AAC3B,0BACI;AAAK,QAAA,SAAS,EAAE,YAAhB;AAAA,+BACI,QAAC,QAAD;AAAA,oBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAjGqB;;AAAA,6CAmGJ,CAACA,KAAD,EAAQG,GAAR,EAAaiB,GAAb,KAAqB;AACnC,UAAIC,KAAK,GAAG;AACR,SAAClB,GAAD,GAAO;AAAEmB,UAAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE,MAAT;AAAiBK,YAAAA,IAAI,EAAE;AAAvB,WAAT;AAAwCC,UAAAA,KAAK,EAAG,GAAErB,GAAG,GAAG,IAAK;AAA7D,SADC;AAER,SAACiB,GAAD,GAAO;AAAEE,UAAAA,KAAK,EAAE;AAAEJ,YAAAA,KAAK,EAAE,MAAT;AAAiBK,YAAAA,IAAI,EAAE;AAAvB,WAAT;AAAyCC,UAAAA,KAAK,EAAG,GAAEJ,GAAG,GAAG,IAAK;AAA9D;AAFC,OAAZ;AAIA,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,oBAAyBpB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,KAAK,MADT;AAEI,YAAA,IAAI,EAAE,IAFV;AAGI,YAAA,GAAG,EAAEG,GAHT;AAII,YAAA,GAAG,EAAEiB,GAJT;AAKI,YAAA,YAAY,EAAE,CAACjB,GAAD,EAAMiB,GAAN,CALlB;AAMI,YAAA,YAAY,EAAGf,KAAD,iBAAW;AAAA,yBAAMA,KAAK,GAAG,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,oBAN7B;AAOI,YAAA,KAAK,EAAEgB;AAPX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBH,KAxHqB;;AAEd,SAAKI,UAAL,GAAkB,EAAlB;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTlB,MAAAA,UAAU,EAAE,IAHH;AAITmB,MAAAA,WAAW,EAAE;AAJJ,KAAb;;AAOA,QAAG9B,KAAK,CAACY,UAAN,CAAiBmB,UAApB,EAA+B;AAC3B,WAAKJ,KAAL,CAAWC,YAAX,GAA0B5B,KAAK,CAACY,UAAN,CAAiBmB,UAA3C;AACH;;AACD,QAAG/B,KAAK,CAACY,UAAN,CAAiBC,MAApB,EAA2B;AACvB,WAAKc,KAAL,CAAWE,QAAX,GAAuB7B,KAAK,CAACY,UAAN,CAAiBC,MAAxC;AACH;;AAED,SAAKmB,aAAL,GAAqB,KAAKC,eAAL,CAAqB,aAArB,EAAoC,KAAKN,KAAL,CAAWC,YAA/C,EAA6D,UAA7D,CAArB;AACA,SAAKM,SAAL,GAAiB,KAAKD,eAAL,CAAqB,QAArB,EAA+B,KAAKN,KAAL,CAAWE,QAA1C,EAAoD,MAApD,CAAjB;AACA,SAAKM,WAAL,GAAmB,KAAKF,eAAL,CAAqB,QAArB,EAA+B,KAAKN,KAAL,CAAWhB,UAA1C,EAAsD,QAAtD,CAAnB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACY,UAAlB;AACA,SAAKwB,KAAL,GAAa,CAAb;AACA,SAAKV,UAAL,CAAgBW,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE,KAAKF,KAAL,EAAN;AAAoBG,MAAAA,KAAK,EAAE,KAAKP;AAAhC,KAArB;AACA,SAAKN,UAAL,CAAgBW,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE,KAAKF,KAAL,EAAN;AAAoBG,MAAAA,KAAK,EAAE,KAAKL;AAAhC,KAArB;AACA,SAAKR,UAAL,CAAgBW,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE,KAAKF,KAAL,EAAN;AAAoBG,MAAAA,KAAK,EAAE,KAAKJ;AAAhC,KAArB;AAGA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK;;AAkFDK,EAAAA,MAAM,CAACC,CAAD,EAAI;AAEN,wBACI;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE,iBAAhB;AAAA,kBACK,KAAKf,UAAL,CAAgBN,GAAhB,CAAoBL,CAAC,IAAEA,CAAC,CAACwB,KAAzB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApI0B;;AA4I/B,eAAezC,MAAf","sourcesContent":["import { Component } from 'react'\r\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nlet holder = [\r\n    {\r\n        id: 5,\r\n        name: \"Baki\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Kelbecer\"\r\n    }\r\n]\r\n\r\nclass Filter extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.filterList = [];\r\n\r\n        this.state = {\r\n            categoryList: null,\r\n            cityList: null,\r\n            regionList: null,\r\n            villageList: null\r\n        }\r\n        \r\n        if(props.filterJson.categories){\r\n            this.state.categoryList = props.filterJson.categories\r\n        }\r\n        if(props.filterJson.cities){\r\n            this.state.cityList =  props.filterJson.cities\r\n        }\r\n        \r\n        this.categoryInput = this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\");\r\n        this.cityInput = this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\");\r\n        this.regionInput = this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\")\r\n\r\n\r\n        console.log(props.filterJson)\r\n        this.index = 0;\r\n        this.filterList.push({key: this.index++, input: this.categoryInput})\r\n        this.filterList.push({key: this.index++, input: this.cityInput})\r\n        this.filterList.push({key: this.index++, input: this.regionInput})\r\n        \r\n        \r\n        /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n        this.filterList.push({key: this.index++, input: this.cityInput})\r\n                    {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                    {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                    {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                    {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                    {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                    {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                    {checkBoxGenerator(\"Çıxarış\")}\r\n                    {checkBoxGenerator(\"Ipoteka\")}*/\r\n    }\r\n\r\n\r\n    \r\npriceİnputGenerator = (title, minName, maxName, min, step) => {\r\n    return (\r\n        <div className={'priceInput'}>\r\n            <div className={'item'}><label>{title}</label></div>\r\n            <div className={'item'}>\r\n                <InputNumber\r\n                    placeholder={\"Min.\"}\r\n                    min={min}\r\n                    step={step}\r\n                    name={minName}\r\n                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                />\r\n                -\r\n                <InputNumber\r\n                    placeholder={\"Max.\"}\r\n                    min={min}\r\n                    step={step}\r\n                    name={maxName}\r\n                    formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                    parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\ncitySearch = (value) =>{\r\n    console.log(value)\r\n    \r\n    this.setState({regionList: this.props.filterJson.cities.filter(w=>w.id == value).regions})\r\n}\r\n\r\nselectGenerator = (title, options, name) => {\r\n    if(!options) return null\r\n\r\n    return (<div className={'selectInput'}>\r\n        <div className={'item'}><label>{title}</label></div>\r\n        <div className={'item'}>\r\n            <Select onSelect={this.citySearch} name={name} defaultValue=\"lucy\" style={{ width: 120 }}>\r\n                {options.map(w => <Option value={w.id}>{w.name}</Option>)}\r\n            </Select>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\ncheckBoxGenerator = (title) => {\r\n    return (\r\n        <div className={'checkInput'}>\r\n            <Checkbox>{title}</Checkbox>\r\n        </div>\r\n    )\r\n}\r\n\r\nsliderGenerator = (title, min, max) => {\r\n    let marks = {\r\n        [min]: { style: { width: '100%', left: '8%' }, label: `${min / 1000}.000 M` },\r\n        [max]: { style: { width: '100%', left: '92%' }, label: `${max / 1000}.000 M` }\r\n    }\r\n    return (\r\n        <div className='sliderInput'>\r\n            <div className={'item'}>{title}</div>\r\n            <div className={'item'}>\r\n                <Slider\r\n                    range\r\n                    step={5000}\r\n                    min={min}\r\n                    max={max}\r\n                    defaultValue={[min, max]}\r\n                    tipFormatter={(value) => <div>{value / 1000}.000</div>}\r\n                    marks={marks}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n    render(h) {\r\n       \r\n        return (\r\n            <div className={'filter'}>\r\n                <div className={'containerFilter'}>\r\n                    {this.filterList.map(w=>w.input)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}