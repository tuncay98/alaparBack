{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tunca\\\\Desktop\\\\AlApar_master\\\\next\\\\alapar\\\\components\\\\subcomponents\\\\filter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\nconst {\n  Option\n} = Select;\nlet holder = [{\n  id: 5,\n  name: \"Baki\"\n}, {\n  id: 4,\n  name: \"Kelbecer\"\n}];\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"price\\u0130nputGenerator\", (title, minName, maxName, min, step) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'priceInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Min.\",\n            min: min,\n            step: step,\n            name: minName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), \"-\", /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Max.\",\n            min: min,\n            step: step,\n            name: maxName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"citySearch\", value => {\n      console.log(value);\n      this.setState({\n        regionList: this.state.cityList.filter(w => w.id == value).map(w => w.regions),\n        filterList: [...this.state.filterList, {\n          key: 3,\n          input: this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\"),\n          visibility: true\n        }]\n      });\n    });\n\n    _defineProperty(this, \"selectGenerator\", (title, options, name) => {\n      if (!options) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'selectInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onSelect: this.citySearch,\n            name: name,\n            defaultValue: \"lucy\",\n            style: {\n              width: 120\n            },\n            children: options.map(w => /*#__PURE__*/_jsxDEV(Option, {\n              value: w.id,\n              children: w.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 39\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this);\n    });\n\n    _defineProperty(this, \"checkBoxGenerator\", title => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'checkInput',\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"sliderGenerator\", (title, min, max) => {\n      let marks = {\n        [min]: {\n          style: {\n            width: '100%',\n            left: '8%'\n          },\n          label: `${min / 1000}.000 M`\n        },\n        [max]: {\n          style: {\n            width: '100%',\n            left: '92%'\n          },\n          label: `${max / 1000}.000 M`\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            step: 5000,\n            min: min,\n            max: max,\n            defaultValue: [min, max],\n            tipFormatter: value => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [value / 1000, \".000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 50\n            }, this),\n            marks: marks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this);\n    });\n\n    this.state = {\n      filterList: [],\n      categoryList: [],\n      cityList: [],\n      regionList: [],\n      villageList: []\n    };\n\n    if (props.filterJson.categories) {\n      this.state.categoryList = props.filterJson.categories;\n    }\n\n    if (props.filterJson.cities) {\n      this.state.cityList = props.filterJson.cities;\n    }\n\n    if (props.filterJson.cities.filter(x => x.regions)) {\n      this.state.regionList = props.filterJson.cities;\n    }\n\n    console.log(props.filterJson);\n    this.categoryInput = this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\");\n    this.cityInput = this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\");\n    this.regionInput = this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\");\n    this.state.filterList.push({\n      key: 1,\n      input: this.categoryInput,\n      visibility: true\n    });\n    this.state.filterList.push({\n      key: 2,\n      input: this.cityInput,\n      visibility: true\n    });\n    this.state.filterList.push({\n      key: 3,\n      input: this.regionInput,\n      visibility: false\n    });\n    /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n    this.filterList.push({key: this.index++, input: this.cityInput})\r\n                {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                {checkBoxGenerator(\"Çıxarış\")}\r\n                {checkBoxGenerator(\"Ipoteka\")}*/\n  }\n\n  render(h) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'filter',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'containerFilter',\n        children: this.state.filterList.filter(w => w.visibility == true).map(w => w.input)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["C:/Users/tunca/Desktop/AlApar_master/next/alapar/components/subcomponents/filter.js"],"names":["Component","Select","Slider","Checkbox","InputNumber","Option","holder","id","name","Filter","constructor","props","title","minName","maxName","min","step","value","replace","console","log","setState","regionList","state","cityList","filter","w","map","regions","filterList","key","input","selectGenerator","visibility","options","citySearch","width","max","marks","style","left","label","categoryList","villageList","filterJson","categories","cities","x","categoryInput","cityInput","regionInput","push","render","h"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nlet holder = [\r\n    {\r\n        id: 5,\r\n        name: \"Baki\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Kelbecer\"\r\n    }\r\n]\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            filterList: [],\r\n            categoryList: [],\r\n            cityList: [],\r\n            regionList: [],\r\n            villageList: []\r\n        }\r\n\r\n        if (props.filterJson.categories) {\r\n            this.state.categoryList = props.filterJson.categories\r\n        }\r\n        if (props.filterJson.cities) {\r\n            this.state.cityList = props.filterJson.cities\r\n        }\r\n        if(props.filterJson.cities.filter(x=>x.regions)){\r\n            this.state.regionList = props.filterJson.cities\r\n        }\r\n\r\n        console.log(props.filterJson)\r\n\r\n        this.categoryInput = this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\");\r\n        this.cityInput = this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\");\r\n        this.regionInput = this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\")\r\n\r\n\r\n        this.state.filterList.push({ key: 1, input: this.categoryInput, visibility: true })\r\n        this.state.filterList.push({ key: 2, input: this.cityInput, visibility: true })\r\n        this.state.filterList.push({ key: 3, input: this.regionInput, visibility: false })\r\n\r\n\r\n        /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n        this.filterList.push({key: this.index++, input: this.cityInput})\r\n                    {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                    {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                    {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                    {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                    {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                    {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                    {checkBoxGenerator(\"Çıxarış\")}\r\n                    {checkBoxGenerator(\"Ipoteka\")}*/\r\n    }\r\n\r\n\r\n\r\n    priceİnputGenerator = (title, minName, maxName, min, step) => {\r\n        return (\r\n            <div className={'priceInput'}>\r\n                <div className={'item'}><label>{title}</label></div>\r\n                <div className={'item'}>\r\n                    <InputNumber\r\n                        placeholder={\"Min.\"}\r\n                        min={min}\r\n                        step={step}\r\n                        name={minName}\r\n                        formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    />\r\n                -\r\n                <InputNumber\r\n                        placeholder={\"Max.\"}\r\n                        min={min}\r\n                        step={step}\r\n                        name={maxName}\r\n                        formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    citySearch = (value) => {\r\n        console.log(value)\r\n        this.setState({\r\n            regionList: this.state.cityList.filter(w=>w.id == value).map(w=>w.regions),\r\n            filterList: [...this.state.filterList, {key: 3,input: this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\"), visibility: true}],\r\n        })\r\n\r\n    }\r\n\r\n    selectGenerator = (title, options, name) => {\r\n        if (!options) return null\r\n\r\n        return (<div className={'selectInput'}>\r\n            <div className={'item'}><label>{title}</label></div>\r\n            <div className={'item'}>\r\n                <Select onSelect={this.citySearch} name={name} defaultValue=\"lucy\" style={{ width: 120 }}>\r\n                    {options.map(w => <Option value={w.id}>{w.name}</Option>)}\r\n                </Select>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    checkBoxGenerator = (title) => {\r\n        return (\r\n            <div className={'checkInput'}>\r\n                <Checkbox>{title}</Checkbox>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sliderGenerator = (title, min, max) => {\r\n        let marks = {\r\n            [min]: { style: { width: '100%', left: '8%' }, label: `${min / 1000}.000 M` },\r\n            [max]: { style: { width: '100%', left: '92%' }, label: `${max / 1000}.000 M` }\r\n        }\r\n        return (\r\n            <div className='sliderInput'>\r\n                <div className={'item'}>{title}</div>\r\n                <div className={'item'}>\r\n                    <Slider\r\n                        range\r\n                        step={5000}\r\n                        min={min}\r\n                        max={max}\r\n                        defaultValue={[min, max]}\r\n                        tipFormatter={(value) => <div>{value / 1000}.000</div>}\r\n                        marks={marks}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(h) {\r\n\r\n        return (\r\n            <div className={'filter'}>\r\n                <div className={'containerFilter'}>\r\n                    {this.state.filterList.filter(w=>w.visibility == true).map(w => w.input)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}