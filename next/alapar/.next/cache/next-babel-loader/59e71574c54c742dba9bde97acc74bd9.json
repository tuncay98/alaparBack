{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tunca\\\\Desktop\\\\AlApar_master\\\\next\\\\alapar\\\\pages\\\\search.js\";\nimport { Component } from 'react';\nimport Filter from '@/subcomponents/filter';\nimport withRedux from \"next-redux-wrapper\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.saveFilter();\n  }\n\n  render(h) {\n    console.log(this.props.filterJsons);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'leftSide',\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          filterJson: this.props.filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'rightSide'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nSearch.getInitialProps = ({\n  store,\n  isServer,\n  pathname,\n  query\n}) => {\n  // component will read from store's state when rendered\n  store.dispatch({\n    type: 'FOO',\n    payload: 'foo'\n  }); // pass some custom props to component from here\n\n  return {\n    custom: 'custom'\n  };\n};\n\nexport async function getStaticProps() {\n  const res = await fetch('http://192.168.1.107:5566/api/bina/filter');\n  const filter = await res.json();\n  return {\n    props: {\n      filter\n    }\n  };\n}\nexport default Search;","map":{"version":3,"sources":["C:/Users/tunca/Desktop/AlApar_master/next/alapar/pages/search.js"],"names":["Component","Filter","withRedux","Search","constructor","props","saveFilter","render","h","console","log","filterJsons","filter","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","custom","getStaticProps","res","fetch","json"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,UAAL;AACH;;AAGDC,EAAAA,MAAM,CAACC,CAAD,EAAI;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,WAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,+BACI,QAAC,MAAD;AAAS,UAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAjB0B;;AAoB/BT,MAAM,CAACU,eAAP,GAAyB,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,QAAlB;AAA4BC,EAAAA;AAA5B,CAAD,KAAwC;AAC7D;AACAH,EAAAA,KAAK,CAACI,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAf,EAF6D,CAG7D;;AACA,SAAO;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAP;AACD,CALH;;AAOA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAAvB;AACA,QAAMZ,MAAM,GAAG,MAAMW,GAAG,CAACE,IAAJ,EAArB;AACA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLO,MAAAA;AADK;AADF,GAAP;AAKH;AAED,eAAeT,MAAf","sourcesContent":["import { Component } from 'react'\r\nimport Filter from '@/subcomponents/filter'\r\nimport withRedux from \"next-redux-wrapper\";\r\n\r\nclass Search extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.saveFilter()\r\n    }\r\n\r\n\r\n    render(h) {\r\n        console.log(this.props.filterJsons)\r\n        return (\r\n            <div className={'container'}>\r\n                <div className={'leftSide'}>\r\n                    <Filter  filterJson={this.props.filter}></Filter>\r\n                </div>\r\n                <div className={'rightSide'}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.getInitialProps = ({store, isServer, pathname, query}) => {\r\n    // component will read from store's state when rendered\r\n    store.dispatch({type: 'FOO', payload: 'foo'});\r\n    // pass some custom props to component from here\r\n    return {custom: 'custom'}; \r\n  };\r\n\r\nexport async function getStaticProps() {\r\n    const res = await fetch('http://192.168.1.107:5566/api/bina/filter')\r\n    const filter = await res.json()\r\n    return {\r\n      props: {\r\n        filter,\r\n      },\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}