{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from '../types';\nexport var saveFilterAction = function saveFilterAction(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: types.SAVE_FILTER,\n                payload: data\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/tunca/Desktop/AlApar_master/next/alapar/store/actions/save_filter.js"],"names":["types","saveFilterAction","data","dispatch","type","SAVE_FILTER","payload"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA;AAAA,wEAAU,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AACtCA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAAEJ,KAAK,CAACK,WADP;AAELC,gBAAAA,OAAO,EAAEJ;AAFJ,eAAD,CAAR;;AADsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import * as types from '../types'\r\n\r\nexport const saveFilterAction = (data) => async dispatch => {\r\n    dispatch({\r\n        type: types.SAVE_FILTER,\r\n        payload: data\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}