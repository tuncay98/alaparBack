{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { message, Tabs, Button, Upload, Modal, Select, Radio, Checkbox, InputNumber, Collapse, Input, Tooltip } from 'antd';\nimport { DndProvider, useDrag, useDrop, createDndContext } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport React from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Option\n} = Select;\nconst {\n  TextArea\n} = Input;\nimport { PlusOutlined } from '@ant-design/icons';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nfunction onChange(a, b, c) {\n  console.log(a, b, c);\n}\n\nclass Utilities {\n  constructor(th) {\n    _defineProperty(this, \"showError\", text => {\n      message.error(text);\n    });\n\n    _defineProperty(this, \"tabGenerator\", (tabs, ...items) => {\n      return /*#__PURE__*/_jsx(Tabs, {\n        onTabClick: (key, event) => this.th.setState({\n          activeKey: key\n        }),\n        activeKey: this.th.state.activeKey,\n        centered: true,\n        tabPosition: 'top',\n        animated: true,\n        children: items.map((w, k) => {\n          return /*#__PURE__*/_jsxs(TabPane, {\n            forceRender: true,\n            tab: tabs[k],\n            children: [w, k != items.length - 1 ? /*#__PURE__*/_jsx(\"div\", {\n              className: 'tabBtn',\n              children: /*#__PURE__*/_jsx(\"a\", {\n                className: 'btn',\n                onClick: () => this.th.setState({\n                  activeKey: `${k + 2}`\n                }),\n                children: \"Sonraki\"\n              })\n            }) : null]\n          }, `${k + 1}`);\n        })\n      });\n    });\n\n    _defineProperty(this, \"inputGenerator\", (title, placeholder, callback, state) => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: 'subitem simpleInput',\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(\"label\", {\n            children: title\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          validatename: state,\n          children: /*#__PURE__*/_jsx(Input, {\n            className: 'width',\n            name: state,\n            placeholder: placeholder,\n            onKeyUp: callback\n          })\n        })]\n      });\n    });\n\n    _defineProperty(this, \"numberGenerator\", (title, placeholder, callback, name, visibility) => {\n      if (!visibility) return null;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: 'subitem numberInput',\n        validatename: name,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(\"label\", {\n            className: 'title',\n            children: title\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(InputNumber, {\n            name: name,\n            min: 1,\n            className: 'width inputnumber',\n            placeholder: placeholder,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => `${value}`.replace(/\\$\\s?|(,*)/g, ''),\n            onKeyUp: callback\n          })\n        })]\n      });\n    });\n\n    _defineProperty(this, \"textAreaGeneretor\", (title, placeholder, callback, name) => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: 'subitem textAreaInput',\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(\"label\", {\n            children: title\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          validatename: name,\n          children: /*#__PURE__*/_jsx(TextArea, {\n            className: 'width inputarea',\n            name: name,\n            placeholder: placeholder,\n            autoSize: {\n              minRows: 5,\n              maxRows: 12\n            },\n            onKeyUp: callback,\n            maxLength: 5000\n          })\n        })]\n      });\n    });\n\n    _defineProperty(this, \"price\\u0130nputGenerator\", (title, minName, maxName, min, step, Callback, visibility) => {\n      if (!visibility) return null;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: 'subitem priceInput',\n        validatename: minName,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          validatename: maxName,\n          children: /*#__PURE__*/_jsx(\"label\", {\n            children: title\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: 'item',\n          children: [/*#__PURE__*/_jsx(InputNumber, {\n            placeholder: \"Min.\",\n            onBlur: Callback,\n            onInput: Callback,\n            min: min,\n            step: step,\n            name: minName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }), \"-\", /*#__PURE__*/_jsx(InputNumber, {\n            placeholder: \"Max.\",\n            onBlur: Callback,\n            onInput: Callback,\n            min: min,\n            step: step,\n            name: maxName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          })]\n        })]\n      });\n    });\n\n    _defineProperty(this, \"selectGenerator\", (title, options, name, selected, callback, sort, selectAll) => {\n      if (!options || options.length < 1) return null;\n\n      if (sort) {\n        options.sort((a, b) => {\n          let fa = a.name.toLowerCase();\n          let fb = b.name.toLowerCase();\n          if (fa < fb) return -1;\n          if (fa > fb) return 1;\n          return 0;\n        });\n      }\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: 'subitem selectInput',\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(\"label\", {\n            children: title\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          validatename: name,\n          children: /*#__PURE__*/_jsxs(Select, {\n            virtual: false,\n            onSelect: callback,\n            placeholder: \"SeÃ§in\",\n            value: selected,\n            name: name,\n            className: 'width',\n            children: [selectAll ? /*#__PURE__*/_jsx(Option, {\n              state: name,\n              value: 0,\n              children: \"Ham\\u0131s\\u0131\"\n            }) : null, options.map((w, i) => /*#__PURE__*/_jsx(Option, {\n              state: name,\n              value: w.id,\n              children: w.name\n            }, new Date().getTime() + i))]\n          })\n        })]\n      });\n    });\n\n    _defineProperty(this, \"checkBoxGenerator\", (title, callback, name, visible) => {\n      if (!visible) return null;\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: 'subitem checkInput',\n        validatename: name,\n        children: /*#__PURE__*/_jsx(Checkbox, {\n          state: name,\n          name: name,\n          onChange: callback,\n          children: title\n        })\n      });\n    });\n\n    _defineProperty(this, \"radioGenerator\", (label, values, defaultValue, callback, name) => {\n      if (!values) return null;\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"subitem radioInput\",\n        validatename: name,\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: label\n        }), \" \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Radio.Group, {\n          onChange: callback,\n          defaultValue: defaultValue,\n          buttonStyle: \"solid\",\n          children: values.map((w, i) => /*#__PURE__*/_jsx(Radio.Button, {\n            value: w.id,\n            children: w.name\n          }, new Date().getTime() + i))\n        })]\n      });\n    });\n\n    _defineProperty(this, \"DragableUploadListItem\", ({\n      originNode,\n      moveRow,\n      file,\n      fileList\n    }) => {\n      const type = 'DragableUploadList';\n      const ref = React.useRef();\n      const index = fileList.indexOf(file);\n      const [{\n        isOver,\n        dropClassName\n      }, drop] = useDrop({\n        accept: type,\n        collect: monitor => {\n          const {\n            index: dragIndex\n          } = monitor.getItem() || {};\n\n          if (dragIndex === index) {\n            return {};\n          }\n\n          return {\n            isOver: monitor.isOver(),\n            dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward'\n          };\n        },\n        drop: item => {\n          moveRow(item.index, index);\n        }\n      });\n      const [, drag] = useDrag({\n        item: {\n          type,\n          index\n        },\n        collect: monitor => ({\n          isDragging: monitor.isDragging()\n        })\n      });\n      drop(drag(ref));\n\n      const errorNode = /*#__PURE__*/_jsx(Tooltip, {\n        title: \"Upload Error\",\n        getPopupContainer: () => document.body,\n        children: originNode.props.children\n      });\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        ref: ref,\n        className: `ant-upload-draggable-list-item ${isOver ? dropClassName : ''}`,\n        style: {\n          cursor: 'move'\n        },\n        children: file.status === 'error' ? errorNode : originNode\n      });\n    });\n\n    _defineProperty(this, \"moveRow\", (dragIndex, hoverIndex) => {\n      let fileList = this.th.state.fileList;\n      [fileList[dragIndex], fileList[hoverIndex]] = [fileList[hoverIndex], fileList[dragIndex]];\n      this.th.setState({\n        fileList: fileList\n      });\n      this.handleChange({\n        fileList: fileList\n      });\n    });\n\n    _defineProperty(this, \"manager\", createDndContext(HTML5Backend));\n\n    _defineProperty(this, \"imageUploadGenerator\", (fileList, previewVisible, previewTitle, previewImage) => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"subitem\",\n        children: [/*#__PURE__*/_jsx(DndProvider, {\n          manager: this.manager.dragDropManager,\n          children: /*#__PURE__*/_jsx(Upload, {\n            action: \"http://192.168.1.107:5566/api/bina/image\",\n            name: \"images\",\n            multiple: true,\n            listType: \"picture-card\",\n            fileList: fileList,\n            onPreview: this.handlePreview,\n            onChange: this.handleChange,\n            itemRender: (originNode, file, currFileList) => /*#__PURE__*/_jsx(this.DragableUploadListItem, {\n              originNode: originNode,\n              file: file,\n              fileList: currFileList,\n              moveRow: this.moveRow\n            }),\n            children: fileList.length >= 25 ? null : /*#__PURE__*/_jsxs(\"div\", {\n              children: [/*#__PURE__*/_jsx(PlusOutlined, {}), /*#__PURE__*/_jsx(\"div\", {\n                style: {\n                  marginTop: 8\n                },\n                children: \"\\u015E\\u0259kil\"\n              })]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Modal, {\n          visible: previewVisible,\n          title: previewTitle,\n          footer: null,\n          onCancel: this.handleCancel,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            alt: \"example\",\n            style: {\n              width: '100%'\n            },\n            src: previewImage\n          })\n        })]\n      });\n    });\n\n    _defineProperty(this, \"getImageState\", {\n      previewVisible: false,\n      previewImage: '',\n      previewTitle: '',\n      fileList: []\n    });\n\n    _defineProperty(this, \"handleCancel\", () => this.th.setState({\n      previewVisible: false\n    }));\n\n    _defineProperty(this, \"handlePreview\", async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.th.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", async ({\n      fileList\n    }) => {\n      this.th.setState(_objectSpread(_objectSpread({}, this.th.state), {}, {\n        fileList: [...fileList],\n        selected: _objectSpread(_objectSpread({}, this.th.state.selected), {}, {\n          images: [...fileList].filter(w => w.response).map(w => w.response.fileName)\n        })\n      }));\n    });\n\n    _defineProperty(this, \"googleMap\", (lat, lan, callback, title, latName, lanName) => {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        validatename: latName,\n        className: \"subitem\",\n        style: {\n          height: '100%',\n          width: '50%',\n          padding: \"20px\",\n          margin: \"0 auto\"\n        },\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(\"label\", {\n            children: title\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            onClick: () => {\n              this.th.setState({\n                mapVisible: true\n              });\n            },\n            children: \"A\\xE7\"\n          })\n        }), /*#__PURE__*/_jsx(Modal, {\n          title: \"X\\u0259rit\\u0259\",\n          visible: this.th.state.mapVisible,\n          width: '50%',\n          footer: null,\n          onCancel: () => {\n            this.th.setState({\n              mapVisible: false\n            });\n          },\n          children: /*#__PURE__*/_jsx(RegularMap, {\n            googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD6Vz_IKnktPC_TLl9DAmm_BpxokzQ4fIQ\",\n            loadingElement: /*#__PURE__*/_jsx(\"div\", {\n              style: loadingElementStyle\n            }),\n            containerElement: /*#__PURE__*/_jsx(\"div\", {\n              style: containerElementStyle\n            }),\n            mapElement: /*#__PURE__*/_jsx(\"div\", {\n              style: mapElementStyle\n            }),\n            info: {\n              lat: lat,\n              lan: lan,\n              callback: callback\n            }\n          })\n        })]\n      });\n    });\n\n    this.th = th;\n  }\n\n}\n\nexport default Utilities;\nconst defaultOptions = {\n  scrollwheel: false\n};\nconst RegularMap = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsx(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: +props.info.lat,\n    lng: +props.info.lan\n  },\n  defaultOptions: defaultOptions,\n  onClick: props.info.callback,\n  options: {\n    mapTypeControl: true,\n    clickableIcons: false\n  },\n  children: /*#__PURE__*/_jsx(Marker, {\n    position: {\n      lat: +props.info.lat,\n      lng: +props.info.lan\n    }\n  })\n})));\nconst loadingElementStyle = {\n  height: '100%'\n};\nconst containerElementStyle = {\n  height: '500px'\n};\nconst mapElementStyle = {\n  height: '100%'\n};","map":null,"metadata":{},"sourceType":"module"}