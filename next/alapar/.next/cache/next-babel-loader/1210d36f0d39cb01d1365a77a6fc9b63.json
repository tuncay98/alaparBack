{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tunca\\\\Desktop\\\\AlApar_master\\\\next\\\\alapar\\\\components\\\\subcomponents\\\\filter.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component } from 'react';\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\nconst {\n  Option\n} = Select;\nlet holder = [{\n  id: 5,\n  name: \"Baki\"\n}, {\n  id: 4,\n  name: \"Kelbecer\"\n}];\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"price\\u0130nputGenerator\", (title, minName, maxName, min, step) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'priceInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Min.\",\n            min: min,\n            step: step,\n            name: minName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), \"-\", /*#__PURE__*/_jsxDEV(InputNumber, {\n            placeholder: \"Max.\",\n            min: min,\n            step: step,\n            name: maxName,\n            formatter: value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            parser: value => value.replace(/\\$\\s?|(,*)/g, '')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"selectGenerator\", (title, options, name, callback) => {\n      if (!options) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'selectInput',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onSelect: callback,\n            name: name,\n            style: {\n              width: 120\n            },\n            children: /*#__PURE__*/_jsxDEV(Option, {\n              children: \"Hello\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    });\n\n    _defineProperty(this, \"checkBoxGenerator\", title => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'checkInput',\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"sliderGenerator\", (title, min, max) => {\n      let marks = {\n        [min]: {\n          style: {\n            width: '100%',\n            left: '8%'\n          },\n          label: `${min / 1000}.000 M`\n        },\n        [max]: {\n          style: {\n            width: '100%',\n            left: '92%'\n          },\n          label: `${max / 1000}.000 M`\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sliderInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'item',\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            step: 5000,\n            min: min,\n            max: max,\n            defaultValue: [min, max],\n            tipFormatter: value => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [value / 1000, \".000\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 50\n            }, this),\n            marks: marks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this);\n    });\n\n    _defineProperty(this, \"cityCallback\", value => {\n      let regions = this.state.cityList.find(w => w.id == value).regions;\n      this.setState({\n        regionList: !regions.length ? null : regions,\n        villageList: null\n      });\n    });\n\n    _defineProperty(this, \"regionCallback\", value => {\n      let villages = this.state.regionList.find(w => w.id == value).villages;\n      this.setState({\n        villageList: !villages.length ? null : villages\n      });\n    });\n\n    this.state = {\n      categoryList: null,\n      cityList: null,\n      regionList: null,\n      villageList: null\n    };\n\n    if (props.filterJson.categories) {\n      this.state.categoryList = props.filterJson.categories;\n    }\n\n    if (props.filterJson.cities) {\n      this.state.cityList = props.filterJson.cities;\n    }\n\n    console.log(props.filterJson);\n    /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n    this.filterList.push({key: this.index++, input: this.cityInput})\r\n                {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                {checkBoxGenerator(\"Çıxarış\")}\r\n                {checkBoxGenerator(\"Ipoteka\")}*/\n  }\n\n  render(h) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'filter',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'containerFilter',\n        children: [this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\"), this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\", this.cityCallback), this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\", this.regionCallback), this.selectGenerator(\"Qəsəbə:\", this.state.villageList, \"Village\", null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Filter;","map":{"version":3,"sources":["C:/Users/tunca/Desktop/AlApar_master/next/alapar/components/subcomponents/filter.js"],"names":["Component","Select","Slider","Checkbox","InputNumber","Option","holder","id","name","Filter","constructor","props","title","minName","maxName","min","step","value","replace","options","callback","width","max","marks","style","left","label","regions","state","cityList","find","w","setState","regionList","length","villageList","villages","categoryList","filterJson","categories","cities","console","log","render","h","selectGenerator","cityCallback","regionCallback"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport { Select, Slider, Checkbox, InputNumber } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nlet holder = [\r\n    {\r\n        id: 5,\r\n        name: \"Baki\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Kelbecer\"\r\n    }\r\n]\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            categoryList: null,\r\n            cityList: null,\r\n            regionList: null,\r\n            villageList: null,\r\n        }\r\n\r\n        if (props.filterJson.categories) {\r\n            this.state.categoryList = props.filterJson.categories\r\n        }\r\n        if (props.filterJson.cities) {\r\n            this.state.cityList = props.filterJson.cities\r\n        }\r\n        \r\n\r\n        console.log(props.filterJson)\r\n\r\n        /*{selectGenerator(\"Kategoriya:\", holder, \"Category\")}\r\n        this.filterList.push({key: this.index++, input: this.cityInput})\r\n                    {selectGenerator(\"Şəhər:\", holder, \"City\")}\r\n                    {selectGenerator(\"Rayon:\", holder, \"Region\")}\r\n                    {selectGenerator(\"Qəsəbə:\", holder, \"Village\")}\r\n                    {selectGenerator(\"Metro:\", holder, \"Metro\")}\r\n                    {priceİnputGenerator(\"Qiymət:\", \"minPrice\", \"maxPrice\", 1000, 1000)}\r\n                    {priceİnputGenerator(\"Sahə:\", \"minArea\", \"maxArea\", 10, 1)}\r\n                    {checkBoxGenerator(\"Çıxarış\")}\r\n                    {checkBoxGenerator(\"Ipoteka\")}*/\r\n    }\r\n\r\n\r\n\r\n    priceİnputGenerator = (title, minName, maxName, min, step) => {\r\n        return (\r\n            <div className={'priceInput'}>\r\n                <div className={'item'}><label>{title}</label></div>\r\n                <div className={'item'}>\r\n                    <InputNumber\r\n                        placeholder={\"Min.\"}\r\n                        min={min}\r\n                        step={step}\r\n                        name={minName}\r\n                        formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    />\r\n                -\r\n                <InputNumber\r\n                        placeholder={\"Max.\"}\r\n                        min={min}\r\n                        step={step}\r\n                        name={maxName}\r\n                        formatter={value => `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    selectGenerator = (title, options, name, callback) => {\r\n        if (!options) return null\r\n\r\n        return (<div className={'selectInput'}>\r\n            <div className={'item'}><label>{title}</label></div>\r\n            <div className={'item'}>\r\n                <Select onSelect={callback} name={name} style={{ width: 120 }}>\r\n                   <Option>Hello</Option>\r\n                </Select>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    checkBoxGenerator = (title) => {\r\n        return (\r\n            <div className={'checkInput'}>\r\n                <Checkbox>{title}</Checkbox>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    sliderGenerator = (title, min, max) => {\r\n        let marks = {\r\n            [min]: { style: { width: '100%', left: '8%' }, label: `${min / 1000}.000 M` },\r\n            [max]: { style: { width: '100%', left: '92%' }, label: `${max / 1000}.000 M` }\r\n        }\r\n        return (\r\n            <div className='sliderInput'>\r\n                <div className={'item'}>{title}</div>\r\n                <div className={'item'}>\r\n                    <Slider\r\n                        range\r\n                        step={5000}\r\n                        min={min}\r\n                        max={max}\r\n                        defaultValue={[min, max]}\r\n                        tipFormatter={(value) => <div>{value / 1000}.000</div>}\r\n                        marks={marks}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(h) {\r\n\r\n        return (\r\n            <div className={'filter'}>\r\n                <div className={'containerFilter'}>\r\n                    {this.selectGenerator(\"Kategoriya:\", this.state.categoryList, \"Category\")}\r\n                    {this.selectGenerator(\"Şəhər:\", this.state.cityList, \"City\", this.cityCallback)}\r\n                    {this.selectGenerator(\"Rayon:\", this.state.regionList, \"Region\", this.regionCallback)}\r\n                    {this.selectGenerator(\"Qəsəbə:\", this.state.villageList, \"Village\", null)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    cityCallback = (value) => {\r\n        let regions = this.state.cityList.find(w=> w.id == value).regions;\r\n        this.setState({\r\n            regionList: !regions.length?null:regions,\r\n            villageList: null\r\n        })\r\n    }\r\n\r\n    regionCallback = (value) => {\r\n        let villages = this.state.regionList.find(w=>w.id == value).villages;\r\n        this.setState({\r\n            villageList: !villages.length?null:villages\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Filter;"]},"metadata":{},"sourceType":"module"}